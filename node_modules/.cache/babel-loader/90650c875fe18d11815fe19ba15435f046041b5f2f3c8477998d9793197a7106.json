{"ast":null,"code":"var _jsxFileName = \"/Users/deeksith/Documents/react-certificate/quote-app/src/components/Quotes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport twitterIcon from \"../twitter.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quotes = () => {\n  _s();\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n  useEffect(() => {\n    getQuote();\n  }, []);\n  const getQuote = () => {\n    let url = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n    fetch(url).then(res => res.json()).then(data => {\n      let dataQuotes = data.quotes;\n      let randonNum = Math.floor(Math.random() * dataQuotes.length);\n      let randomQuote = dataQuotes[randonNum];\n      setQuote(randomQuote.quote);\n      setAuthor(randomQuote.author);\n    });\n  };\n  const handleClick = () => {\n    getQuote();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"text\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"author\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"-\", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://twitter.com/intent/tweet\",\n        id: \"tweet-quote\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: twitterIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        id: \"new-quote\",\n        children: \"NewQuote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Quotes, \"0J3WsFviNi1jwx6DrrGsJyi2Khk=\");\n_c = Quotes;\nexport default Quotes;\nvar _c;\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["React","useState","useEffect","twitterIcon","jsxDEV","_jsxDEV","Quotes","_s","quote","setQuote","author","setAuthor","getQuote","url","fetch","then","res","json","data","dataQuotes","quotes","randonNum","Math","floor","random","length","randomQuote","handleClick","id","children","fileName","_jsxFileName","lineNumber","columnNumber","href","src","onClick","_c","$RefreshReg$"],"sources":["/Users/deeksith/Documents/react-certificate/quote-app/src/components/Quotes.js"],"sourcesContent":["import React ,{useState,useEffect} from 'react';\nimport twitterIcon from \"../twitter.svg\";\n\nconst Quotes= () => {\n  const [quote,setQuote]=useState('');\n  const [author,setAuthor]=useState('');\n\n  useEffect(() => {\n    getQuote()\n  },[]);\n\n  const getQuote = () => {\n    let url =\n      \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        let dataQuotes = data.quotes;\n        let randonNum = Math.floor(Math.random() * dataQuotes.length);\n        let randomQuote = dataQuotes[randonNum];\n        setQuote(randomQuote.quote);\n        setAuthor(randomQuote.author);\n      });\n  };\n  const handleClick = () =>{\n    getQuote();\n  }\n  return (\n    <div id=\"quote-box\">\n      <div id=\"text\">\n        <p>{quote}</p>\n      </div>\n        <div id=\"author\">\n          <p>-{author}</p>\n        </div>\n        <div id=\"buttons\">\n          <a href='https://twitter.com/intent/tweet' id=\"tweet-quote\">\n            <span><img src={twitterIcon}></img></span>\n          </a>\n          <button onClick={handleClick} id=\"new-quote\">NewQuote</button>\n\n        </div>\n    </div>\n  )\n}\nexport default Quotes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}